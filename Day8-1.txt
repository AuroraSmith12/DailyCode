#include<stdio.h>
#include<assert.h>
//struct s
//{
//	char name[20];
//	int age;
//};
//int main()
//{
//	//int arr1[] = { 1, 2, 3, 4, 5 };
//	//int arr2[5] = { 0 };
//	///*int ret=strcpy(arr2, arr1);*/
//	//int ret = memcpy(arr2, arr1, sizeof(arr2));
//	//printf("%s\n", arr2);
//	struct s arr3[] = { { "张三", 20 }, { "李四", 30 } };
//	struct s arr4[3] = { 0 };
//	memcpy(arr4, arr3, sizeof(arr3));
//	return 0;
//}
//void*my_memcpy(void*dest, const void*src, size_t num)
//{
//	void* ret = dest;
//	assert(dest != NULL);
//	assert(src != NULL);
//	while (num--)
//	{
//		*(char*)dest = *(char*)src;
//		++(char*)dest;
//		++(char*)src;
//	}
//	return ret;
//}
//int main()
//{
	//int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	//int i = 0;
	////memcpy(arr + 2, arr, 20);
	//memmove(arr + 2, arr, 20);
	//for (i = 0; i < 10; i++)
	//{
	//	printf("%d ", arr[i]);
	//}
	/*int arr1[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	int arr2[10] = { 0 };
	memcpy(arr2, arr1, 40);
	int i = 0;
	for (i = 0; i < 10; i++)
	{
		printf("%d  ", arr2[i]);
	}*/
	/*int arr1[] = { 1, 2, 3, 4, 5 };
	int arr2[] = { 1, 2, 4, 3, 5 };
	int ret = memcmp(arr1, arr2, 9);
	printf("%d\n",ret);*/
	/*char arr[10] = "";
	memset(arr, 1, 10);*/
//	return 0;
//}
//struct Node
//{
//	int data;
//	struct Node* next;
//};
//typedef struct 
//{
//	char name;
//	int age;
//}Node;
//int main()
//{
//	Node stu;
//	return 0;
//}
//struct s{
//	char c;
//	int a;
//	double d;
//	char arr[20];
//
//};
//int main()
//{
//	struct s p1 = { 'c', 100, 3.14, "hello bit" };
//	printf("%c  %d  %f  %s\n", p1.c, p1.a, p1.d, p1.arr);
//	return 0;
//}
struct s1
{
	char c1;
	int a;
	char c2;
};
struct s2
{
	char c1;
	char c2;
	int a;
};
int main()
{
	struct s1 p1 = { 0 };
	printf("%d\n",sizeof(p1));
	struct s2 p2 = { 0 };
	printf("%d\n", sizeof(p2));
	return 0;
}